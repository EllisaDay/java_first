package ru.stqa.pft.sandbox;

/*
 * класс - это описание структуры однотипных объектов, которые называются представителями или экземплярами этого класса
 * поэтому мы создаем класс, который описывает объект (квадрат), площадь которого мы вычисляем
 * этот класс описывает структуру объектов, хранящих информацию о квадрате
 */

/* описываем аттрибуты, которыми  обладает объект этого типа
 * квадрат описывается длиной его стороны
 */
public class Square {
  public double l;


  /* внутри класса объявляем псевдо-функцию (конструктор) Square
   *   (он не имеет возвращаемого значения, перед его именем тип возвращаемого значения не указывается),
   *   (точно также, как ф-я, конструктор может передавать параметры ((double l) - тут l это переменная, которая является аргументов ф-ии Square)))
   * конструктор предназначен для заполнения атрибутов нового создаваемого объекта некоторыми значениями,
   * которые передаются в качестве параметра в этот конструктор.
   *   (для этого в {} пишем код, который инициализирует новый объект, то есть заполняет его атрибуты значениями)
   * this - выступает в качестве переменной, которая ссылается на конструируемый объект.
   *   (значение атрибута создаваемого объекта (this.l) равно значению параметра, переданного в конструктор (=l))
   */
  public Square(double l){
    this.l = l;
  }


  /* метод area ассоциирован с объектом, и поэтому его не нужно передавать в качестве парамера
   * обращаться к ассоциированному объекту можно через this, это и есть ссылка на объект, с которым ассоциирован метод
   * тут нету static, потому что оно используется чтобы помечать ф-ии, которые не  ассоциировани ни с камими объектам, к которым можно обращаться напрямую
   */
  public double area (){
    return this.l * this.l;
  }
}
